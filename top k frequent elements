Given a non-empty array of integers, return the k most frequent elements.

Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]
Example 2:

Input: nums = [1], k = 1
Output: [1]
Note:

You may assume k is always valid, 1 ≤ k ≤ number of unique elements.
Your algorithm's time complexity must be better than O(n log n), where n is the array's size.


class Solution(object):
    def topKFrequent(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        dic = {}
        res = []
        for num in nums:
            if num in dic:
                dic[num] +=1
            else:
                dic[num] = 1
        
        while k > 0:
            max_freq = 0
            max_key = 0
            for num in dic:
                if dic[num] > max_freq:
                    max_freq = dic[num]
                    max_key = num
            k-=1
            res.append(max_key)
            del dic[max_key]
        return res
